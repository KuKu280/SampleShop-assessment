//
//  AllProductScreenViewController.swift
//  SampleShop
//
//  Created Ku Ku Zan on 19/04/2022.
//  Copyright Â© 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by Ku Ku Zan.
//

import Foundation
import UIKit
import Kingfisher

class AllProductScreenViewController: UIViewController {
    
    // MARK: Delegate initialization
    var presenter: AllProductScreenViewToPresenterProtocol?
    
    // MARK: Outlets
    @IBOutlet weak var titleLabel: UILabel!
    @IBOutlet weak var searchBar: UISearchBar!
    @IBOutlet weak var productCollectionView: UICollectionView!
    
    // MARK: Custom initializers go here
    var productsResponse: ProductsResponseModel? {
        didSet {
            guard let productResponse = productsResponse else { return }
            titleLabel.text = "Hello Kante, What \(productResponse.content.first?.category.name ?? "") combo do you want today"
            if productResponse.page != productResponse.totalPages{
                page = productResponse.page + 1
            }
            productResponse.page != 0 ? (self.products += productResponse.content) : (self.products = productResponse.content)
            debugPrint(page, products.count)
            productCollectionView.reloadData()
        }
    }

    var products: [Content] = [Content]()
    
    var page: Int = 0
    
    // MARK: View Lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        presenter?.started()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        self.presenter?.getProducts(.init(page: "0", size: "6"))
    }
    
    // MARK: User Interaction - Actions & Targets
    
    
    // MARK: Additional Helpers
    private func defaultSetup() {
        addBarButtons()
        searchBar.searchBarStyle()
        collectionViewSetup()
    }
    
    private func collectionViewSetup() {
        productCollectionView.collectionViewLayout = .productLayout
        productCollectionView.registerCell(type: ProductCollectionViewCell.self)
        productCollectionView.delegate = self
        productCollectionView.dataSource = self
    }
    
    private func addBarButtons() {
        let menuBarButtonItem = UIBarButtonItem(image: UIImage(systemName: "list.dash"), style: .plain, target: self, action: #selector(menuBarButtonAction(_:)))
        let cartBarButtonItem = UIBarButtonItem(image: UIImage(systemName: "cart"), style: .plain, target: self, action: #selector(cartBarButtonAction(_:)))
        menuBarButtonItem.tintColor = .appColor(.tertiaryTextColor)
        cartBarButtonItem.tintColor = .appColor(.primaryColor)
        self.navigationItem.leftBarButtonItem = menuBarButtonItem
        self.navigationItem.rightBarButtonItem = cartBarButtonItem
        self.navigationController?.navigationBar.hideShadow()
    }
    
    @objc func menuBarButtonAction(_ sender: UIBarButtonItem){
        debugPrint("Menu Button Clicked")
    }
    
    @objc func cartBarButtonAction(_ sender: UIBarButtonItem){
        debugPrint("Cart Button Clicked")
    }
    
}

// MARK: - Extension
/**
 - Documentation for purpose of extension
 */
// MARK: - UICollectionViewDataSource
extension AllProductScreenViewController: UICollectionViewDataSource {
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return products.count
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueCell(withType: ProductCollectionViewCell.self, for: indexPath) as! ProductCollectionViewCell
        cell.configCell(product: products[indexPath.row])
        return cell
    }
    
    func scrollViewDidEndDragging(_ scrollView: UIScrollView, willDecelerate decelerate: Bool) {
        let currentOffset = scrollView.contentOffset.y
        let maximumOffset = scrollView.contentSize.height - scrollView.frame.size.height
        if maximumOffset - currentOffset <= 10.0 {
            presenter?.getProducts(.init(page: "\(page)", size: "6"))
        }
    }
    
}

// MARK: - UICollectionViewDelegate
extension AllProductScreenViewController: UICollectionViewDelegate {
    
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        presenter?.clickedProductCell(product: products[indexPath.row])
    }
    
}


// MARK: - Presenter to View
extension AllProductScreenViewController: AllProductScreenPresenterToViewProtocl {
    
    func initialControlSetup() {
        defaultSetup()
    }
    
}
