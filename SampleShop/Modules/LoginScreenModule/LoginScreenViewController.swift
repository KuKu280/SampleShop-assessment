//
//  LoginScreenViewController.swift
//  SampleShop


//  Copyright Â© 2022 ___ORGANIZATIONNAME___. All rights reserved.
//  This file was generated by Ku Ku Zan.
//

import Foundation
import UIKit

class LoginScreenViewController: UIViewController {
    
    // MARK: Delegate initialization
    var presenter: LoginScreenViewToPresenterProtocol?
    
    // MARK: Outlets
    
    @IBOutlet weak var usernameTextField: UITextField!
    @IBOutlet weak var passwordTextField: UITextField!
    
    @IBOutlet weak var usernameErrorLabel: UILabel!
    @IBOutlet weak var passwordErrorLabel: UILabel!
    
    // MARK: Custom initializers go here
    
    
    // MARK: View Lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        presenter?.started()
    }
    
    // MARK: User Interaction - Actions & Targets
    @IBAction func loginButtonAction(_ sender: CustomButton) {
        presenter?.clickedLoginButton(inputData: LoginRequestModel(username: usernameTextField.inputValue, password: passwordTextField.inputValue))
    }
    
    // MARK: Additional Helpers
    private func defaultSetup() {
        passwordTextField.addVisibleButton()
        textFieldSetup()
    }
    
    private func textFieldSetup() {
        usernameTextField.delegate = self
        passwordTextField.delegate = self
    }
}

// MARK: - Extension
/**
 - Documentation for purpose of extension
 */
extension LoginScreenViewController: UITextFieldDelegate {
    
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        if textField == usernameTextField {
            passwordTextField.becomeFirstResponder()
        } else {
            textField.resignFirstResponder()
        }
        return true
    }
    
    func textFieldDidBeginEditing(_ textField: UITextField) {
        if textField == usernameTextField {
            usernameErrorLabel.text = ""
        } else {
            passwordErrorLabel.text = ""
        }
    }
    
}

// MARK: - Presenter to View
extension LoginScreenViewController: LoginScreenPresenterToViewProtocl {
    
    func initialControlSetup() {
       defaultSetup()
    }
    
    func showTextFieldErrorLabel(error: ValidationErrors) {
        if error == .usernameError {
            usernameErrorLabel.text = error.rawValue
        } else {
            passwordErrorLabel.text = error.rawValue
        }
    }
    
}
