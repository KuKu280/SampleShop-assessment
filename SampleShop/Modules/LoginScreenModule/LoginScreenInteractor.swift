//
//  LoginScreenInteractor.swift
//  SampleShop

//  Copyright Â© 2022 ___ORGANIZATIONNAME___. All rights reserved.
//  This file was generated by Ku Ku Zan.
//

import Foundation

class LoginScreenInteractor {
    
    // MARK: Delegate initialization
    var presenter: LoginScreenInterectorToPresenterProtocol?
    
    // MARK: - Call Service
    func loginAPICall(inputData: LoginRequestModel) {
        debugPrint(inputData)
        presenter?.fetchingStart()
        APIClient.login(loginRequestModel: inputData) { result in
            switch result {
            case .success(let response):
                debugPrint(response.token)
                UserDefaults.standard.set(response.token, forKey: "Token")
                self.presenter?.success()
            case .failure(let error):
                self.presenter?.fail(error: error)
            }
        }
    }
    
}

// MARK: - Presenter to Interactor
extension LoginScreenInteractor: LoginScreenPresentorToInterectorProtocol {
    
    func validation(_ inputData: LoginRequestModel) -> Bool {
        var result: Bool = true
        if inputData.username.isEmpty {
            presenter?.validationFail(.usernameError)
            result = false
        }
        if inputData.password.isEmpty {
            presenter?.validationFail(.passwordError)
            result = false
        }
        return  result
    }
    
}
